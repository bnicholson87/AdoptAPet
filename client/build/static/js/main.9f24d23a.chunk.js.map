{"version":3,"sources":["components/NavBar.js","utils/GlobalStore.js","components/Footer.js","components/AlertBar.js","utils/API.js","components/Tasks.js","components/Register.js","components/Login.js","components/Logout.js","App.js","index.js"],"names":["timeout","initialData","authOk","name","tasks","alert","dataReducer","state","action","type","data","message","console","log","StoreContext","createContext","useStoreContext","useContext","StoreProvider","props","useReducer","dispatch","Provider","value","NavBar","useState","showMenu","setShowMenu","location","useLocation","useEffect","clearTimeout","setTimeout","class","to","className","src","alt","width","height","onClick","data-toggle","data-target","id","activeClassName","Footer","AlertBar","clearAlert","fetchJSON","url","method","fetchOptions","headers","localStorage","session","body","JSON","stringify","fetch","then","res","json","Tasks","inputRef","useRef","a","status","newTasks","e","preventDefault","newTask","current","task","tasksLoad","map","ref","placeholder","disabled","length","Register","inputEmail","inputPassword","inputName","regData","trim","email","password","focus","indexOf","userData","for","Login","inputRememberMe","saveData","rememberMe","checked","Logout","userLogout","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f24d23a.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Redirect, NavLink, useLocation  } from \"react-router-dom\"\nimport { useStoreContext } from \"../utils/GlobalStore\"\n\nlet timeout\n\nfunction NavBar() {\n  const [ showMenu, setShowMenu ] = useState( false )\n  const [{ authOk, name }]= useStoreContext()\n  const location = useLocation()\n\n  useEffect( function(){\n    if( showMenu ){\n      if( timeout ) clearTimeout( timeout )\n      timeout = setTimeout( function(){ setShowMenu( false ); }, 2000 )\n    }\n  }, [ showMenu ])\n\n  // location changed so hide menu\n  useEffect( function(){\n    if( timeout ) clearTimeout( timeout )\n    setShowMenu( false )\n  }, [ location ])\n  \n  return ( \n    <>\n    { !authOk ? <Redirect to='/login' /> :\n    <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <NavLink to=\"/\" className=\"navbar-brand\">\n          <img src='https://upload.wikimedia.org/wikipedia/commons/7/79/Mountain_icon_%28Noun_Project%29.svg' alt=\"\" width=\"64\" height=\"64\" />\n      </NavLink>\n      <button onClick={() => setShowMenu(!showMenu)} class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbar\">\n        <span class=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className={`collapse navbar-collapse `+(showMenu ? 'show' : '')} id=\"navbar\">\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\n          <li className=\"nav-item\">\n            <NavLink to=\"/tasks\" className=\"nav-link\" activeClassName=\"active\">Tasks</NavLink>\n          </li>          \n          <li className=\"nav-item\">\n            <NavLink to=\"/logout\" className=\"nav-link\">Logout</NavLink>\n          </li> \n        </ul>\n        { name && <div class=\"d-flex\"><div class=\"mx-3\">Welcome back <u>{name}</u></div></div> }\n      </div>\n    </nav>\n    }\n    </>\n  )\n}\n\nexport default NavBar","import React, { createContext, useReducer, useContext } from \"react\"\n\nconst initialData = {\n  authOk: false, name: \"\", tasks: [], alert: \"\"\n}\n\n/*! IMPORTANT all your reducer functionality goes here */\nconst dataReducer = (state, action) => {\n  switch (action.type) {\n    case \"USER_LOGIN\":\n      return { ...state, ...action.data, alert: action.message || '', authOk: true }\n    case \"USER_LOGOUT\":\n      return { ...initialData, alert: action.message || '' }\n    case \"ALERT_MESSAGE\":\n      return { ...state, alert: action.message }\n    case \"ALERT_CLEAR\":\n      return { ...state, alert: '' }\n    case \"UPDATE_TASKS\":\n      return { ...state, tasks: action.tasks, alert: action.message || '' }\n    default:\n      console.log(`Invalid action type: ${action.type}`)\n      return state\n  }\n}\n\n\n\nconst StoreContext = createContext()\n\nconst useStoreContext = function(){\n  return useContext(StoreContext)\n}\n\nconst StoreProvider = function(props){\n  const [state, dispatch] = useReducer( dataReducer, initialData )\n  return <StoreContext.Provider value={[state, dispatch]} {...props} />\n}\n\nexport { StoreProvider, useStoreContext }","import React from \"react\"\n\nfunction Footer(){\n    return (\n        <>  \n            <hr />\n            <div id=\"footer-padding\"></div>\n            <div id=\"footer\">(c) 202x Project#3 Team</div>\n        </>\n    )\n}\n\nexport default Footer","import React, { useEffect } from 'react'\nimport { useStoreContext } from \"../utils/GlobalStore\"\n\nlet timeout\n\nfunction AlertBar() {\n  const [{ alert }, dispatch ]= useStoreContext()\n\n  function clearAlert(){\n    // if user clicked on the box, then timeout may still exist, so clear it\n    if( timeout ) clearTimeout( timeout )\n\n    dispatch({ type: \"ALERT_CLEAR\" })\n  }\n\n  useEffect( function(){\n    if( alert ){\n      // we see a alert has been pushed, so let's set a clear for this alert\n      // debounce an previous pending clears\n      if( timeout ){\n        clearTimeout( timeout )\n      }\n      timeout = setTimeout( clearAlert, 5000 )\n    }\n  }, [ alert ])\n  \n  return ( \n    <>\n      { alert && <div onClick={clearAlert} class=\"navbar fixed-top alert alert-warning mx-5\">{alert}</div> }\n    </>\n  )\n}\n\nexport default AlertBar","/*\n    note how we wrap our api fetch in this function that allows us to do some\n    additional error / message handling for all API calls...\n*/\nfunction fetchJSON( url, method='get', data={} ){\n    const fetchOptions = {\n        method,\n        headers: {\n            'Content-Type': 'application/json',\n            // looks for a session entry in localStorage, and if so pass it\n            'Session': localStorage.session || ''\n        }\n    }\n    // only attach the body for put/post\n    if( method === 'post' || method === 'put' ) {\n        fetchOptions.body = JSON.stringify( data )\n    }\n  \n    return fetch( url,fetchOptions ).then( res=>res.json() )\n}\n\nexport default fetchJSON","import React, { useEffect, useRef } from \"react\"\nimport { useStoreContext } from \"../utils/GlobalStore\"\nimport fetchJSON from \"../utils/API\"\n\nfunction Tasks() {\n  const [ { alert, tasks }, dispatch ]= useStoreContext()\n\n  const inputRef = useRef()\n\n  async function tasksLoad(){\n    const { status, tasks: newTasks, message }= await fetchJSON( '/api/tasks' )\n    if( !status ){\n      dispatch({ type: \"ALERT_MESSAGE\", message })\n      return\n    }\n\n    // update tasks list\n    console.log( `.. GET /api/tasks, tasks:`, newTasks )\n    dispatch({ type: \"UPDATE_TASKS\", tasks: newTasks })\n  }\n\n  async function tasksSave( e ){\n    e.preventDefault()\n    \n    const newTask = inputRef.current.value\n    // clear input\n    inputRef.current.value = ''\n\n    const { status, tasks: newTasks, message }= await fetchJSON( '/api/tasks', 'post', { task: newTask } )\n    if( !status ){\n      dispatch({ type: \"ALERT_MESSAGE\", message })\n      return\n    }\n\n    dispatch({ type: \"UPDATE_TASKS\", tasks: newTasks, message })\n  }\n\n  // on load get the list\n  useEffect( function(){\n    tasksLoad()\n  }, [])\n  \n  return (\n      <form>\n      <div class=\"card\">\n          <div class=\"card-header\">\n              <h1>Task List</h1>\n          </div>\n          <div  class=\"card-body\">\n              <ul id=\"taskList\" class=\"list-group\">\n                {tasks && tasks.map( task=><li class=\"list-group-item\">{task.name}</li> )}\n              </ul>\n          </div>\n\n          <div class=\"card-footer\">\n            <div class=\"input-group\">\n              <input ref={inputRef} type=\"text\" class=\"form-control\" placeholder='New Task...' /> \n              <button onClick={tasksSave} disabled={alert.length>0} class=\"btn btn-primary\">Save</button>\n            </div>\n          </div>\n      </div>\n      </form>\n  )\n}\n\nexport default Tasks","import React, { useRef, useEffect } from \"react\"\nimport { Redirect, Link } from 'react-router-dom'\nimport { useStoreContext } from \"../utils/GlobalStore\"\nimport fetchJSON from \"../utils/API\"\n\nfunction Register(){\n    const [ { authOk }, dispatch ] = useStoreContext()\n\n    const inputEmail = useRef()\n    const inputPassword = useRef()\n    const inputName = useRef()\n\n    async function registerUser( e ){\n        e.preventDefault();\n        \n        const regData = {\n            name: inputName.current.value.trim(),\n            email: inputEmail.current.value.trim(),\n            password: inputPassword.current.value.trim()\n        }\n\n        if( regData.name.length<3 ){\n            inputName.current.focus()\n            dispatch({ type: 'ALERT_MESSAGE', message: \"You need a longer name\" })\n            return\n        }\n        if( regData.email.indexOf('@')<3 ){\n            inputEmail.current.focus()\n            dispatch({ type: 'ALERT_MESSAGE', message: \"You need a leggit email\" })\n            return\n        }\n        if( regData.password.length<5 ){\n            inputPassword.current.focus()\n            dispatch({ type: 'ALERT_MESSAGE', message: \"You need a longer password\" })\n            return\n        }\n\n        const { status, session, userData, message }= await fetchJSON( '/api/users/register', 'post', regData )\n        if( !status ){\n            // clear any session\n            localStorage.session = ''\n            dispatch({ type: 'ALERT_MESSAGE', message })\n            return\n        }\n\n        // notify user message; set user session/data\n        localStorage.session = session\n        dispatch({ type: 'USER_LOGIN', data: userData, message })\n    }\n\n    useEffect( function(){\n        // if remembered email, insert\n        inputEmail.current.value = localStorage.email || ''\n    }, [] )\n\n    return (\n        <>\n            { authOk ? <Redirect to='/tasks' /> : '' }\n            <form>\n            <div class=\"card mt-5\">\n                <div class=\"card-header\">\n                    <h1>User Registration</h1>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"mb-3\">\n                        <label for=\"name\">First Name</label>\n                        <input ref={inputName} type=\"text\" id=\"name\" class=\"form-control\" />\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"email\">Email Address</label>\n                        <input ref={inputEmail} id=\"email\" type=\"email\" class=\"form-control\" />\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"userPassword\">Password</label>\n                        <input ref={inputPassword} id=\"userPassword\" type=\"password\" class=\"form-control\" />\n                    </div>\n                </div>\n                <div class=\"card-footer\">\n                    <button onClick={registerUser} class=\"btn btn-primary mx-1\" >Register</button>\n                    <Link to=\"/login\" class=\"font-weight-light text-muted mx-3\">Already Registered?</Link>\n                </div>\n            </div>\n            </form>\n        </>\n    )\n}\n\nexport default Register","import React, { useEffect, useRef } from \"react\"\nimport { Redirect, Link } from \"react-router-dom\"\nimport { useStoreContext } from \"../utils/GlobalStore\"\nimport fetchJSON from \"../utils/API\"\n\nfunction Login(){\n    const [ { authOk }, dispatch ]= useStoreContext()\n\n    const inputEmail = useRef()\n    const inputPassword = useRef()\n    const inputRememberMe = useRef()\n\n    async function userLogin( e ){\n        console.log( `[userLogin]` )\n        e.preventDefault()\n        \n        const saveData = {\n            email: inputEmail.current.value,\n            password: inputPassword.current.value,\n            rememberMe: inputRememberMe.current.checked\n        }\n\n        if( saveData.email === \"\" ) {\n            inputEmail.current.focus()\n            dispatch({ type: 'ALERT_MESSAGE', message: 'Please enter your email!' })\n            return\n        }\n    \n        if( saveData.password === \"\" || saveData.password.length < 8 ) {\n            inputPassword.current.focus()\n            dispatch({ type: 'ALERT_MESSAGE', message: 'Please enter your password!' })\n            return\n        }\n\n        const { status, session, userData, message }=await fetchJSON( '/api/users/login', 'post', saveData )            \n        if( !status ){\n            // clear any session\n            localStorage.session = ''\n            dispatch({ type: 'ALERT_MESSAGE', message })\n            return\n        }\n\n        // remember email if user wanted\n        if( inputRememberMe.current.checked ){\n            localStorage.email = inputEmail.current.value\n        } else {\n            localStorage.email = ''\n        }\n         \n        // login ok, saving session & saving userData\n        localStorage.session = session\n        dispatch({ type: 'USER_LOGIN', data: userData })\n    }\n\n    // at startup we initialize a few things\n    useEffect( function(){\n        inputEmail.current.value = localStorage.email || ''\n        inputRememberMe.current.checked = true\n    }, [] )\n\n    return (\n        <>\n            { authOk ? <Redirect to='/tasks' /> : '' }\n            <form>\n            <div class=\"card mt-5\">\n                <div class=\"card-header\">\n                    <h1>Login</h1>\n                </div>\n                <div class=\"card-body\">\n                    <div class=\"mb-3\">\n                        <label for=\"email\" class=\"form-label\">Email address</label>\n                        <input ref={inputEmail} id=\"email\" type=\"email\" class=\"form-control\" />\n                    </div>\n                    <div class=\"mb-3\">\n                        <label for=\"userPassword\">Password</label>\n                        <input ref={inputPassword} id=\"userPassword\" type=\"password\" class=\"form-control\" />\n                    </div>\n                </div>                    \n                <div class=\"card-footer\">\n                    <button onClick={userLogin} type=\"button\" class=\"btn btn-primary mx-1\">Login</button>\n                    &nbsp; \n                    <input ref={inputRememberMe} id='rememberMe' type=\"checkbox\" />                        \n                    <label class='text-secondary' for='rememberMe'>Remember Me</label> &nbsp;\n                    <Link to=\"/register\" class=\"mx-3\">Need to Register?</Link>\n                </div>\n            </div>\n            </form>\n        </>\n    )\n}\n\nexport default Login","import React, { useEffect } from \"react\"\nimport { Redirect } from 'react-router-dom'\nimport { useStoreContext } from \"../utils/GlobalStore\"\nimport fetchJSON from \"../utils/API\"\n\nfunction Logout(){\n    const [ { authOk }, dispatch ]= useStoreContext()\n\n    \n    async function userLogout(){\n        // call the api to logout (and clear session)\n        const { message } = await fetchJSON( '/api/users/logout' )\n        // logout\n        localStorage.session = '';\n        dispatch({ type: 'USER_LOGOUT', message })\n    }\n    \n    useEffect( function(){\n        // attempt to request logout (ONCE on page load)\n        userLogout()\n    }, [] )\n\n    return (\n        <>\n            { !authOk && <Redirect to='/login' /> }\n            <h1>Please wait, logging out...</h1>\n        </>\n    )\n}\n\nexport default Logout","import React from \"react\"\nimport { BrowserRouter, Route } from \"react-router-dom\"\nimport { StoreProvider } from \"./utils/GlobalStore\"\n\nimport NavBar from \"./components/NavBar\"\nimport Footer from \"./components/Footer\"\nimport AlertBar from \"./components/AlertBar\"\n// pages\nimport Tasks from \"./components/Tasks\"\nimport Register from \"./components/Register\"\nimport Login from \"./components/Login\"\nimport Logout from \"./components/Logout\"\n\nfunction App() {\n  return (\n    <StoreProvider>\n      <BrowserRouter>\n        <div class=\"container\">\n            <AlertBar />\n            <NavBar />\n            <Route exact path={[\"/\",\"/tasks\"]} component={Tasks} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/logout\" component={Logout} />\n\n            <Footer />\n        </div>\n      </BrowserRouter>\n    </StoreProvider>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}